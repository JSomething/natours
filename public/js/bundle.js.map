{"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA,kBAAkB;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;ACAlB,kBAAkB,GAEX,MAAM,4CAAa,CAAC;IACzB,SAAS,WAAW,GAClB;IAEF,MAAM,MAAM,IAAI,SAAS,GAAG,CAAC;QAC3B,WAAW;QACX,OAAO;QACP,YAAY;IAId;IAEA,MAAM,SAAS,IAAI,SAAS,YAAY;IAExC,UAAU,OAAO,CAAC,CAAC;QACjB,oBAAoB;QACpB,MAAM,KAAK,SAAS,aAAa,CAAC;QAClC,GAAG,SAAS,GAAG;QACf,aAAa;QACb,IAAI,SAAS,MAAM,CAAC;YAClB,SAAS;YACT,mCAAmC;YACnC,QAAQ;QACV,GACG,SAAS,CAAC,IAAI,WAAW,EACzB,KAAK,CAAC;QAET,WAAW;QACX,IAAI,SAAS,KAAK,CAAC;YACjB,QAAQ;YACR,gBAAgB;QAClB,GACG,SAAS,CAAC,IAAI,WAAW,EACzB,OAAO,CAAC,CAAC,OAAO,EAAE,IAAI,GAAG,CAAC,EAAE,EAAE,IAAI,WAAW,CAAC,IAAI,CAAC,EACnD,KAAK,CAAC;QACT,wCAAwC;QACxC,OAAO,MAAM,CAAC,IAAI,WAAW;IAC/B;IAEA,IAAI,SAAS,CAAC,QAAQ;QACpB,SAAS;YACP,KAAK;YACL,QAAQ;YACR,MAAM;YACN,OAAO;QACT;IACF;AACF;;;AClDA,kBAAkB,GAEX,MAAM,4CAAQ,OAAO,OAAO;IACjC,IAAI;QACF,MAAM,MAAM,MAAM,MAAM;YACtB,QAAQ;YACR,KAAK;YACL,MAAM;gBACJ,OAAO;gBACP,UAAU;YACZ;QACF;QAEA,IAAI,IAAI,IAAI,CAAC,MAAM,KAAK,WACtB,MAAM,4BACJ,OAAO,UAAU,CAAC;YAChB,SAAS,MAAM,CAAC;QAClB,GAAG;IAET,EAAE,OAAO,KAAK;QACZ,MAAM,IAAI,QAAQ,CAAC,IAAI,CAAC,OAAO;IACjC;AACF;;;AFfA,MAAM,kCAAY,KAAK,KAAK,CAAC,SAAS,cAAc,CAAC,OAAO,OAAO,CAAC,SAAS;AAC7E,QAAQ,GAAG,CAAC;AAEZ,CAAA,GAAA,yCAAS,EAAE;AAEX,SAAS,aAAa,CAAC,SAAS,gBAAgB,CAAC,UAAU,CAAC;IAC1D,EAAE,cAAc;IAChB,MAAM,QAAQ,SAAS,cAAc,CAAC,SAAS,KAAK;IACpD,MAAM,WAAW,SAAS,cAAc,CAAC,YAAY,KAAK;IAC1D,CAAA,GAAA,yCAAI,EAAE,OAAO;AACf","sources":["public/js/index.js","public/js/mapbox.js","public/js/login.js"],"sourcesContent":["/* eslint-disable */\n\nimport 'core-js';\nimport 'regenerator-runtime/runtime';\nimport { displayMap } from './mapbox';\nimport { login } from './login';\n\nconst locations = JSON.parse(document.getElementById('map').dataset.locations);\nconsole.log(locations);\n\ndisplayMap(locations);\n\ndocument.querySelector('.form').addEventListener('submit', (e) => {\n  e.preventDefault();\n  const email = document.getElementById('email').value;\n  const password = document.getElementById('password').value;\n  login(email, password);\n});\n","/* eslint-disable */\n\nexport const displayMap = (locations) => {\n  mapboxgl.accessToken =\n    'pk.eyJ1IjoianNvbWV0aGluZyIsImEiOiJjbTB2cnprcWkxbWgxMmlvaDA3aTdjdXNoIn0.7MlpMDuHOxZlNshymatM5g';\n\n  const map = new mapboxgl.Map({\n    container: 'map', // container ID\n    style: 'mapbox://styles/jsomething/cm0w321du007k01p45jkmc2e4',\n    scrollZoom: false,\n    // center: [-118.113491, 34.111745], // starting position [lng, lat]. Note that lat must be set between -90 and 90\n    // zoom: 9, // starting zoom\n    // interactive: false,\n  });\n\n  const bounds = new mapboxgl.LngLatBounds();\n\n  locations.forEach((loc) => {\n    //creates marker pin\n    const el = document.createElement('div');\n    el.className = 'marker';\n    //adds marker\n    new mapboxgl.Marker({\n      element: el,\n      //bottom of pin at precise location\n      anchor: 'bottom',\n    })\n      .setLngLat(loc.coordinates)\n      .addTo(map);\n\n    //add popup\n    new mapboxgl.Popup({\n      offset: 30,\n      focusAfterOpen: false,\n    })\n      .setLngLat(loc.coordinates)\n      .setHTML(`<p>Day ${loc.day}: ${loc.description}</p>`)\n      .addTo(map);\n    //extends map bounds to include location\n    bounds.extend(loc.coordinates);\n  });\n\n  map.fitBounds(bounds, {\n    padding: {\n      top: 200,\n      bottom: 150,\n      left: 100,\n      right: 100,\n    },\n  });\n};\n","/* eslint-disable */\n\nexport const login = async (email, password) => {\n  try {\n    const res = await axios({\n      method: 'POST',\n      url: 'http://localhost:3000/api/v1/users/login',\n      data: {\n        email: email,\n        password: password,\n      },\n    });\n\n    if (res.data.status === 'success') {\n      alert('Logged in successfully!'),\n        window.setTimeout(() => {\n          location.assign('/');\n        }, 1500);\n    }\n  } catch (err) {\n    alert(err.response.data.message);\n  }\n};\n"],"names":[],"version":3,"file":"bundle.js.map","sourceRoot":"../../"}